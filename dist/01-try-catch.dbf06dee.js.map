{"version":3,"sources":["js/01-try-catch.js"],"names":["console","log","setTimeout","myName"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAI;AACAA,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAEAC,EAAAA,UAAU,CAAC,MAAI;AACX,QAAG;AACCC,MAAAA,MAAM;AACT,KAFD,CAEE,MAAK;AACHH,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;AAEJ,GAPS,EAOP,GAPO,CAAV;AAUAD,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAEH,CAfD,CAeE,MAAM;AACJD,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;;AAEDD,OAAO,CAACC,GAAR,CAAY,oBAAZ,GAYA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA","file":"01-try-catch.dbf06dee.js","sourceRoot":"..\\src","sourcesContent":["// Обробка помилок з try...catch\n//  - Синтаксис\n//  - які помилки відловлює\n//    - ❌ помилки парсинга (parsing errors)\n//    - ✅ помилки виконання (runtime errors)\n//  - Відловнює тільки помилки в синхроному коді\n//    - Як зловили помилку в асинхроному коді\n//  - Об'єкт помилки\n//    - name\n//    - message\n//    - stack\n//  - Блок catch без об'екту помилки\n\ntry {\n    console.log('Код до myName');\n    \n    setTimeout(()=>{\n        try{\n            myName;\n        } catch{\n            console.log('error');\n        }\n        \n    }, 500);\n    \n\n    console.log('Код після myName');\n\n} catch {\n    console.log('Помилка');\n}\n\nconsole.log('Код за try...catch');\n\n\n\n\n\n\n\n\n\n\n\n// import { error, defaultModules } from '@pnotify/core';\n// import '@pnotify/core/dist/PNotify.css';\n// import * as PNotifyMobile from '@pnotify/mobile';\n// import '@pnotify/mobile/dist/PNotifyMobile.css';\n// import '@pnotify/core/dist/BrightTheme.css';\n// defaultModules.set(PNotifyMobile, {});\n\n\n// error({\n//   text: 'Моя перша нотифікація!',\n// });"]}