{"version":3,"sources":["js/01-try-catch.js"],"names":["console","log","setTimeout","myName"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAI;AACAA,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAEAC,EAAAA,UAAU,CAAC,MAAI;AACX,QAAG;AACCC,MAAAA,MAAM;AACT,KAFD,CAEE,MAAK;AACHH,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;AAEJ,GAPS,EAOP,GAPO,CAAV;AAUAD,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAEH,CAfD,CAeE,MAAM;AACJD,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;;AAEDD,OAAO,CAACC,GAAR,CAAY,oBAAZ,GAYA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA","file":"01-try-catch.dbf06dee.js","sourceRoot":"..\\src","sourcesContent":["// Обробка помилок з try...catch\r\n//  - Синтаксис\r\n//  - які помилки відловлює\r\n//    - ❌ помилки парсинга (parsing errors)\r\n//    - ✅ помилки виконання (runtime errors)\r\n//  - Відловнює тільки помилки в синхроному коді\r\n//    - Як зловили помилку в асинхроному коді\r\n//  - Об'єкт помилки\r\n//    - name\r\n//    - message\r\n//    - stack\r\n//  - Блок catch без об'екту помилки\r\n\r\ntry {\r\n    console.log('Код до myName');\r\n    \r\n    setTimeout(()=>{\r\n        try{\r\n            myName;\r\n        } catch{\r\n            console.log('error');\r\n        }\r\n        \r\n    }, 500);\r\n    \r\n\r\n    console.log('Код після myName');\r\n\r\n} catch {\r\n    console.log('Помилка');\r\n}\r\n\r\nconsole.log('Код за try...catch');\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { error, defaultModules } from '@pnotify/core';\r\n// import '@pnotify/core/dist/PNotify.css';\r\n// import * as PNotifyMobile from '@pnotify/mobile';\r\n// import '@pnotify/mobile/dist/PNotifyMobile.css';\r\n// import '@pnotify/core/dist/BrightTheme.css';\r\n// defaultModules.set(PNotifyMobile, {});\r\n\r\n\r\n// error({\r\n//   text: 'Моя перша нотифікація!',\r\n// });"]}