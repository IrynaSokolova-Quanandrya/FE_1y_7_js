{"version":3,"sources":["js/03-async.js"],"names":["getFruit","name","fruits","strawberry","kiwi","apple","Promise","resolve","makeSmoothie","console","log"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,QAAMC,MAAM,GAAG;AACbC,IAAAA,UAAU,EAAE,IADC;AAEbC,IAAAA,IAAI,EAAE,KAFO;AAGbC,IAAAA,KAAK,EAAE;AAHM,GAAf;AAMA,SAAOC,OAAO,CAACC,OAAR,CAAgBL,MAAM,CAACD,IAAD,CAAtB,CAAP;AACD,EAGD;AACA;;;AAEA,eAAeO,YAAf,GAA8B;AAC5B,QAAML,UAAU,GAAG,MAAMH,QAAQ,CAAC,YAAD,CAAjC;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AAEA,QAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAAC,MAAD,CAA3B;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AAED,EAID;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA","file":"03-async.9821e470.js","sourceRoot":"..\\src","sourcesContent":["// Синтаксис async/await\r\n// Послідовні операції\r\n// Паралельні операції з Promise.all()\r\n// try...catch\r\n\r\nfunction getFruit(name) {\r\n  const fruits = {\r\n    strawberry: '🍓',\r\n    kiwi: '🥝 ',\r\n    apple: '🍎',\r\n  };  \r\n\r\n  return Promise.resolve(fruits[name])\r\n}\r\n\r\n\r\n// getFruit('strawberry')\r\n// .then(console.log)\r\n\r\nasync function makeSmoothie() {\r\n  const strawberry = await getFruit('strawberry');\r\n  console.log(strawberry);\r\n\r\n  const kiwi = await getFruit('kiwi');\r\n  console.log(kiwi);\r\n    \r\n}\r\n\r\n\r\n\r\n// Створюємо функцію makeCocktail\r\n// Спочатку окремо потім послідовно операції\r\n// Переписуємо на асинхронну функцію\r\n// Використовуємо setTimeout\r\n// Скільки виконується тіло функції\r\n// Що буде в змінних якщо прибрати await\r\n// скорочуємо час виконання функції\r\n\r\n\r\n\r\n\r\n\r\n\r\n// async function aMakeSmoothie() {\r\n//   try {\r\n//     console.time('aMakeSmoothie');\r\n//     const apple = getFruit('apple');\r\n//     const kiwi = getFruit('kiwi');\r\n//     const berry = getFruit('strawberry');\r\n\r\n//     const fruits = await Promise.all([apple, kiwi, berry]);\r\n//     console.log(fruits);\r\n//     console.timeEnd('aMakeSmoothie');\r\n\r\n//     return fruits;\r\n//   } catch (error) {\r\n//     console.log('Ошибка');\r\n//   }\r\n// }\r\n\r\n// aMakeSmoothie();\r\n\r\n// async function fn () {}\r\n\r\n// const fn  = async function () {}\r\n\r\n// const arr = async () => {}\r\n\r\n// const x = {\r\n//   async getname () {}\r\n// }\r\n\r\n// class X {\r\n//   async getName () {}\r\n// }\r\n"]}